name: '1 - TerraformPlanApply'

on:
  workflow_dispatch:
    inputs:
      PlanApply:
        description: 'Set to 0 to only run plan; set to 1 to run plan & apply'
        required: true
        default: '0'
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  Plan:
    name: 'Plan'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        terraform_version: 1.3.5
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -diff

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

  Apply:
    name: 'Apply'
    runs-on: ubuntu-latest
    needs: 'Plan'
    environment: 
      name: 'Apply'   # Apply environment has protection and requires approver
      #url: ${{ steps.showurl.outputs.url_output }}
      url: ${{ env.URLOUTPUT}}
    # Run Apply if this is a workflow_dispatch (manual) run with the PlanApply input set to 1
    if:   ( github.event_name == 'workflow_dispatch' && github.event.inputs.PlanApply == '1' )
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.2
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false  # need this false so that stdout is not wrapped for showurl step
    - name: Terraform Init
      run: terraform init
    - name: Terraform Apply
      run: terraform apply -auto-approve
    - name: Display URL
      id: showurl
      run: |
        URL_OUTPUT=$(terraform output -raw appgwurl)
        echo "URLOUTPUT=$URL_OUTPUT" >> $GITHUB_ENV
    

       